name: HTTP
version: 4000.3.3
id: HTTP-4000.3.3-DT6LUnBRgoS7jIjjT61Tjx
key: HTTP-4000.3.3-DT6LUnBRgoS7jIjjT61Tjx
license: BSD3
maintainer: Ganesh Sittampalam <ganesh@earth.li>
homepage: https://github.com/haskell/HTTP
synopsis: A library for client-side HTTP
description:
    The HTTP package supports client-side web programming in Haskell. It lets you set up
    HTTP connections, transmitting requests and processing the responses coming back, all
    from within the comforts of Haskell. It's dependent on the network package to operate,
    but other than that, the implementation is all written in Haskell.
    .
    A basic API for issuing single HTTP requests + receiving responses is provided. On top
    of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
    it taking care of handling the management of persistent connections, proxies,
    state (cookies) and authentication credentials required to handle multi-step
    interactions with a web server.
    .
    The representation of the bytes flowing across is extensible via the use of a type class,
    letting you pick the representation of requests and responses that best fits your use.
    Some pre-packaged, common instances are provided for you (@ByteString@, @String@).
    .
    Here's an example use:
    .
    >
    >    do
    >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
    >              -- fetch document and return it (as a 'String'.)
    >      fmap (take 100) (getResponseBody rsp)
    >
    >    do
    >      (_, rsp)
    >         <- Network.Browser.browse $ do
    >               setAllowRedirects True -- handle HTTP redirects
    >               request $ getRequest "http://www.haskell.org/"
    >      return (take 100 (rspBody rsp))
category: Network
author: Warrick Gray <warrick.gray@hotmail.com>
exposed: True
exposed-modules:
    Network.BufferType Network.Stream Network.StreamDebugger
    Network.StreamSocket Network.TCP Network.HTTP Network.HTTP.Headers
    Network.HTTP.Base Network.HTTP.Stream Network.HTTP.Auth
    Network.HTTP.Cookie Network.HTTP.Proxy Network.HTTP.HandleStream
    Network.Browser
hidden-modules: Network.HTTP.Base64 Network.HTTP.MD5Aux
                Network.HTTP.Utils Paths_HTTP
abi: 916a677499ba280de858555e0afebd94
trusted: False
import-dirs: /home/elektrik/dss/.cabal-sandbox/lib/x86_64-linux-ghc-8.0.1.20160521/HTTP-4000.3.3-DT6LUnBRgoS7jIjjT61Tjx
library-dirs: /home/elektrik/dss/.cabal-sandbox/lib/x86_64-linux-ghc-8.0.1.20160521/HTTP-4000.3.3-DT6LUnBRgoS7jIjjT61Tjx
data-dir: /home/elektrik/dss/.cabal-sandbox/share/x86_64-linux-ghc-8.0.1.20160521/HTTP-4000.3.3
hs-libraries: HSHTTP-4000.3.3-DT6LUnBRgoS7jIjjT61Tjx
depends:
    array-0.5.1.1 base-4.9.0.0 bytestring-0.10.8.1
    mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
    network-2.6.2.1-1WjghRfek8488KFUDStNtr
    network-uri-2.6.1.0-6PuDgH21OiwGLI4QZ1g9kt
    parsec-3.1.11-37j7M1YEHqtEooY7BpJdri
    time-1.5.0.1-7YRD6A110U85GkCfV2HErU
haddock-interfaces: /home/elektrik/dss/.cabal-sandbox/share/doc/x86_64-linux-ghc-8.0.1.20160521/HTTP-4000.3.3/html/HTTP.haddock
haddock-html: /home/elektrik/dss/.cabal-sandbox/share/doc/x86_64-linux-ghc-8.0.1.20160521/HTTP-4000.3.3/html
